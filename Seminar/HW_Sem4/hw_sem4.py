# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). 
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества. 
# m — кол-во элементов второго множества. Затем пользователь вводит сами элементы множеств.

n = int(input('Ведите кол-во элементов первого множества: '))
m = int(input('Ведите кол-во элементов второго множества: '))

sp1 = []
sp2 = []
sp3 = []

i = 0
while i < n:
    sp1.append(int(input('Введите элементы множества для набора №1: ')))
    i+=1

j = 0
while j < m:
    sp2.append(int(input('Введите элементы множества для набора №2: ')))
    j+=1

for k in range(len(sp1)):
    for h in range(len(sp2)):
        if sp1[k] == sp2[h]:
            sp3.append(sp1[k])

sp3.sort()
sp3 = list(set(sp3))
print(sp1, sp2, ' -> ', sp3)










# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. 
# Она растёт на круглой грядке, причём кусты высажены только по окружности. 
# Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное 
# число ягод — на i-ом кусте выросло a[i] ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. 
# Эта система состоит из управляющего модуля и нескольких собирающих модулей. 
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, 
# собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один 
# заход собирающий модуль, находясь перед некоторым кустом заданной во входном списке урожайности грядки

from random import randint

sp1 = list(randint(10, 100) for _ in range(int(input('Введите кол-во кустов: '))))
bush = randint(1, len(sp1))
print(f'{sp1} куст ->  {bush}')
sum = 0

if bush == 1:
    res =  sp1[-1] + sp1[0] + sp1[1]
elif bush == len(sp1):
    res = sp1[-2] + sp1[-1] + sp1[0]
else: res = sp1[bush - 2] + sp1[bush] + sp1[bush - 1]
print(f'Максимум будет собранно {res} ягод')